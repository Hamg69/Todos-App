{"ast":null,"code":"var _jsxFileName = \"/home/muhammad/Desktop/Todos-G/src/components/List.js\";\nimport React from \"react\";\n\nclass List extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      all: true,\n      active: false,\n      tocomplete: false\n    };\n\n    this.showCompleted = () => {\n      this.setState({\n        all: false,\n        active: false,\n        tocomplete: true\n      });\n    };\n\n    this.showAll = () => {\n      this.setState({\n        all: true,\n        active: false,\n        tocomplete: false\n      });\n    };\n\n    this.showActive = () => {\n      this.setState({\n        all: false,\n        active: true,\n        tocomplete: false\n      });\n    };\n  }\n\n  render() {\n    //const {items, toggle, remove} = this.props\n    const completed = this.props.items.filter(item => item.complete === true);\n    const activeItems = this.props.items.filter(item => item.complete !== true);\n    const {\n      all,\n      active,\n      tocomplete\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, this.props.items.map(item => item.name !== \"\" ? /*#__PURE__*/React.createElement(\"li\", {\n      key: item.id,\n      style: {\n        display: this.showAll ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.toggle && this.props.toggle(item.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, \"W\"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        textDecoration: item.complete ? \"line-through\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, \" \", item.name.replace(/^./, item.name[0].toUpperCase()), \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.remove(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, \"X\")) : \"\"), completed.map(item => item.complete ? /*#__PURE__*/React.createElement(\"li\", {\n      key: item.id,\n      style: {\n        display: tocomplete === true ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.toggle && this.props.toggle(item.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"W\"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        textDecoration: item.complete ? \"line-through\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \" \", item.name.replace(/^./, item.name[0].toUpperCase()), \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.remove(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, \"X\")) : \"\"), activeItems.map(item => !item.complete ? /*#__PURE__*/React.createElement(\"p\", {\n      key: item.id,\n      style: {\n        display: active === true ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, item.name.replace(/^./, item.name[0].toUpperCase())) : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }\n    }, this.props.items.length !== 0 ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, this.props.items.length + (this.props.items.length === 1 ? \" Item Left\" : \" Items Left\")), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.showAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.showActive,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, \"Active\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.showCompleted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"Completed\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"2.e\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"Clear Completed\")) : \"\", completed.map(item => item.complete ? /*#__PURE__*/React.createElement(\"p\", {\n      key: item.id,\n      style: {\n        display: item.complete ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, item.name.replace(/^./, item.name[0].toUpperCase())) : \"\")));\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["/home/muhammad/Desktop/Todos-G/src/components/List.js"],"names":["React","List","Component","state","all","active","tocomplete","showCompleted","setState","showAll","showActive","render","completed","props","items","filter","item","complete","activeItems","map","name","id","display","toggle","textDecoration","replace","toUpperCase","remove","length"],"mappings":"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","sourcesContent":["import React from \"react\"\r\n\r\nclass List extends React.Component { \r\n  \r\n  state ={\r\n    all: true,\r\n    active: false,\r\n    tocomplete: false\r\n  }\r\n  showCompleted = ()=> {\r\n    this.setState({all: false, active: false, tocomplete: true})\r\n  }\r\n  \r\n  showAll = ()=> {\r\n    this.setState({all: true, active: false, tocomplete: false})\r\n  }\r\n  showActive = ()=> {\r\n    this.setState({all: false, active: true, tocomplete: false})\r\n  }\r\n  \r\nrender() {\r\n  //const {items, toggle, remove} = this.props\r\n  const completed = this.props.items.filter(item => item.complete === true)\r\n  const activeItems = this.props.items.filter(item => item.complete !== true)\r\n  const {all, active, tocomplete} = this.state\r\n  return (\r\n    <div>\r\n    {/*<p>\r\n      {JSON.stringify(this.props.items)}\r\n    </p>*/}\r\n      <ol>\r\n        {this.props.items.map(item => (\r\n          item.name !== \"\"?\r\n          <li key={item.id} \r\n          style = {{display: this.showAll? \"block\" : \"none\"}}>\r\n          <button \r\n            onClick={() => this.props.toggle && this.props.toggle(item.id)}\r\n          >W</button>\r\n          <span\r\n            style = {{textDecoration: item.complete? \"line-through\" : \"none\"}}\r\n            > {item.name.replace(/^./, item.name[0].toUpperCase())} </span>\r\n          <button onClick={() => this.props.remove(item)}>X</button>\r\n          </li>\r\n          :\"\"\r\n          )\r\n        )}\r\n        {completed.map(item => (\r\n          item.complete?\r\n          <li key={item.id} style = {{display: tocomplete === true? \"block\" : \"none\"}}>\r\n          <button \r\n            onClick={() => this.props.toggle && this.props.toggle(item.id)}\r\n          >W</button>\r\n          <span\r\n            style = {{textDecoration: item.complete? \"line-through\" : \"none\"}}\r\n            > {item.name.replace(/^./, item.name[0].toUpperCase())} </span>\r\n          <button onClick={() => this.props.remove(item)}>X</button>\r\n          </li>\r\n          :\"\"\r\n        )\r\n        )}\r\n        {activeItems.map(item => (\r\n          !item.complete?\r\n          <p key={item.id} style = {{display: active === true? \"block\" : \"none\"}}>\r\n            {item.name.replace(/^./, item.name[0].toUpperCase())}\r\n          </p>\r\n          :\"\"\r\n        )\r\n      )}\r\n    </ol>\r\n    <div>\r\n      {this.props.items.length !== 0?\r\n        <p>\r\n          <span>\r\n            {this.props.items.length + (\r\n              this.props.items.length === 1\r\n              ?\" Item Left\"\r\n              :\" Items Left\"\r\n            )}</span>\r\n          <button onClick={this.showAll}>All</button>\r\n          <button onClick={this.showActive}>Active</button>\r\n          <button onClick={this.showCompleted}>Completed</button>\r\n          <a href=\"2.e\">Clear Completed</a>\r\n        </p>\r\n        : \"\"}\r\n        \r\n        {completed.map(item => (\r\n          item.complete?\r\n          <p key={item.id} style = {{display: item.complete? \"block\" : \"none\"}}>{item.name.replace(/^./, item.name[0].toUpperCase())}</p>\r\n          :\"\"\r\n        ))\r\n      }\r\n        \r\n    </div>\r\n</div> \r\n  )}\r\n}\r\n\r\nexport default List"]},"metadata":{},"sourceType":"module"}